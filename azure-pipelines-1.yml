trigger:
- master

pool:
  name: 'Default'

variables:
  agentScriptsPath: 'C:\Users\cwde-rnuesse.EMEA\Software\Azure_DevOps_Scripts'
  workspaceRoot: 'C:\Users\cwde-rnuesse.EMEA\Software\Azure_DevOps_Workspace'
  hostUri: 'cwcc.compuware.com'
  hostPort: '16196'
  hostCodePage: '1047'
  ispwConfig: 'ispw'
  gitProject: 'ralphnuessecpwr'
  gitRepo: 'FTSDEMO_$(ispwApplication)_Unit_Tests'
  cliPath: 'C:\Users\cwde-rnuesse.EMEA\Software\Compuware\TopazCLI'
  ccRepo: 'HDDRXM0.DEMO.COCO.REPOS'
  ccSystem: 'AZURE_$(ispwContainerName)'
  ccTestId: 'BUILD'
  ccDdio: 'SALESSUP.$(ispwApplication).$(ispwLevel).LOAD.SSD'
  sonarScannerPath: 'C:\Users\cwde-rnuesse.EMEA\Software\Sonar\Scanner\bin'
  sonarProjectName: 'RNU_$(ispwApplication)_Azure'
  sonarSources: '.\$(ispwApplication)\MF_Source'
  sonarServer: 'http://sonarqube.nasa.cpwr.corp:9000'

steps:
# Execute Powershell Script to clear Workspace
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\Clear_Workspace.ps1'
    arguments: '$(workspaceRoot)'

# Execute Powershell Script to download sources from ISPW
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\ISPW_Download_Container.ps1'
    arguments: '$(workspaceRoot) $(hostUri) $(hostPort) $(hostUser) $(hostPassword) $(hostCodePage) $(ispwConfig) $(ispwContainerName) $(ispwContainerType) $(ispwLevel) $(cliPath)'

# Execute Powershell Script to clone TTT Assets from GitHub repo
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\Git_Clone_TTT_Repo.ps1'
    arguments: '$(workspaceRoot) $(gitProject)/$(gitRepo)'

# Execute Powershell Script to run unit tests
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\TTT_Run_Tests.ps1'
    arguments: '$(workspaceRoot) $(hostUri) $(hostPort) $(hostUser) $(hostPassword) $(hostCodePage) $(ispwApplication) $(ispwLevel) $(ccRepo) $(ccSystem) $(ccTestId) $(cliPath)'

# Execute Powershell Script to download Code Coverage results
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\Code_Coverage_Download_Metrics.ps1'
    arguments: '$(workspaceRoot) $(hostUri) $(hostPort) $(hostUser) $(hostPassword) $(hostCodePage) $(ispwApplication) $(ccRepo) $(ccSystem) $(ccTestId) $(ccDdio) $(cliPath)'

# Execute Powershell Script to run Sonar Scanner
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\Sonar_Scan.ps1'
    arguments: '$(workspaceRoot) $(ispwApplication) $(sonarProjectName) $(sonarSources)'

# Execute Powershell Script to check Sonar Quality Gate
- task: PowerShell@2
  inputs:
    filePath: '$(agentScriptsPath)\Sonar_Check_Quality_Gate.ps1'
    arguments: '$(sonarServer) $(ispwApplication) $(sonarAuthorization)'